<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0615.1128                               -->
<workbook original-version='18.1' source-build='2018.1.2 (20181.18.0615.1128)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource inline='true' name='Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection name='hyper_0'>
            <connection access_mode='readwrite' author-locale='en_US' class='hyper' dbname='C:/Users/Intern/Documents/My Tableau Repository/Datasources/Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43.hyper' default-settings='yes' output-to-hyper-file='yes' schema='Extract' site-name=':fake-loom-site-writer' sslmode='' tablename='Extract' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='hyper_0' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Question Grouping</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Question Grouping]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Question Grouping</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>24</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Questions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Questions]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Questions</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>203</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Respondent</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Respondent]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Respondent</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>184</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Numeric 0-4 Responses</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Numeric 0-4 Responses]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Numeric 0-4 Responses</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Text Responses</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Text Responses]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Text Responses</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>What is your sex?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[What is your sex?]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>What is your sex?</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>What year are you in?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[What year are you in?]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>What year are you in?</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Which cultural groups do you (strongly) identify with?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Which cultural groups do you (strongly) identify with?]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Which cultural groups do you (strongly) identify with?</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>26</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Which block do you live in?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Which block do you live in?]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Which block do you live in?</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>What is your birth year?</remote-name>
            <remote-type>20</remote-type>
            <local-name>[What is your birth year?]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>What is your birth year?</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Which education system do you come from?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Which education system do you come from?]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Which education system do you come from?</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>What characteristic(s) best describe(s) your last school?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[What characteristic(s) best describe(s) your last school?]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>What characteristic(s) best describe(s) your last school?</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>15</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Difference from 2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Difference from 2017]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Difference from 2017</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>202</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Number of Respondents' datatype='integer' name='[Calculation_595319604116258816]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Respondent])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Text Responses]' role='dimension' type='nominal' />
      <column-instance column='[Text Responses]' derivation='None' name='[none:Text Responses:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.609959' measure-ordering='alphabetic' measure-percentage='0.390042' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Text Responses:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Strongly disagree&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Disagree&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Neutral&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Neutral / Not Applicable&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Agree&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Strongly agree&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Not applicable&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Hong Kong&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource name='Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43' />
          </datasources>
          <datasource-dependencies datasource='Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43'>
            <column caption='Number of Respondents' datatype='integer' name='[Calculation_595319604116258816]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Respondent])' />
            </column>
            <column datatype='string' name='[Numeric 0-4 Responses]' role='dimension' type='nominal' />
            <column datatype='string' name='[Questions]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Respondent]' role='measure' type='quantitative' />
            <column datatype='string' name='[Text Responses]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='measure' type='quantitative' />
            <column-instance column='[Numeric 0-4 Responses]' derivation='None' name='[none:Numeric 0-4 Responses:nk]' pivot='key' type='nominal' />
            <column-instance column='[Questions]' derivation='None' name='[none:Questions:nk]' pivot='key' type='nominal' />
            <column-instance column='[Text Responses]' derivation='None' name='[none:Text Responses:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_595319604116258816]' derivation='User' name='[pcto:usr:Calculation_595319604116258816:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43].[none:Text Responses:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43].[none:Numeric 0-4 Responses:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Numeric 0-4 Responses:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Numeric 0-4 Responses:nk]' member='&quot;2 / Not Applicable&quot;' />
                <groupfilter function='member' level='[none:Numeric 0-4 Responses:nk]' member='&quot;2 / Not applicable&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43].[none:Text Responses:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Text Responses:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Text Responses:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Text Responses:nk]' member='&quot;Not applicable&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43].[none:Text Responses:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Strongly agree&quot;</bucket>
              <bucket>&quot;Agree&quot;</bucket>
              <bucket>&quot;Neutral&quot;</bucket>
              <bucket>&quot;Neutral / Not applicable&quot;</bucket>
              <bucket>&quot;Disagree&quot;</bucket>
              <bucket>&quot;Strongly disagree&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43].[none:Year:qk]' included-values='in-range'>
            <min>2018</min>
            <max>2018</max>
          </filter>
          <slices>
            <column>[Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43].[none:Year:qk]</column>
            <column>[Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43].[none:Text Responses:nk]</column>
            <column>[Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43].[none:Numeric 0-4 Responses:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43].[none:Text Responses:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43].[none:Questions:nk]</rows>
        <cols>([Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43].[none:Numeric 0-4 Responses:nk] * [Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43].[pcto:usr:Calculation_595319604116258816:qk:3])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43].[none:Text Responses:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43].[none:Numeric 0-4 Responses:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;2 / Not Applicable&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43].[none:Numeric 0-4 Responses:nk]</field>
            <field>[Final 2-node-Clean 2-2e135f53c7fc41eb80c62f1da278cd43].[none:Questions:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
